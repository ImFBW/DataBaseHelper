@using DBH.Models.Entitys;
@model FS_ServicesEntity
@{
    Layout = "_LayoutNull";
    ViewData["Title"] = "添加数据库";
    List<FS_ServiceSourceEntity> listSourceEntity = (List<FS_ServiceSourceEntity>)ViewData["listEntity"];
}
@section Styles{

}
<div class="mt-4 mb-4">
    <form id="saveDBserviceForm" method="post" action="~/database/DBServcieSave/" class="row g-3 layui-form needs-vaildation" novalidate>
        <div class="col-md-3 text-end"><label class="col-md-10 col-form-label">数据库地址<span class="text-danger">*</span>：</label></div>
        <div class="col-md-6">
            <input type="text" class="form-control" id="databaseAddress" placeholder="数据库地址" aria-describedby="valid_ServerAddress" name="DBAddress" value="@(Model.ServerAddress)" required />
        </div>
        <div class="col-md-3">
            <div id="valid_ServerAddress" class="vaild-feedback"></div>
        </div>
        <div class="col-md-3 text-end"><label class="col-md-10 col-form-label">端口：</label></div>
        <div class="col-md-6">
            <input type="number" lay-affix="number" class="form-control" id="databasePort" placeholder="地址端口" name="DBPort" value="@(Model.ServerPortNo)" required />
        </div>
        <div class="col-md-3">
            <div class="vaild-feedback"></div>
        </div>
        <div class="col-md-3 text-end"><label class="col-md-10 col-form-label">来源<span class="text-danger">*</span>： </label></div>
        <div class="col-md-6 layui-col-md6">
            <select id="databaseSource" name="DBSource" required>
                <option value="0">--请选择来源--</option>
                @{
                    foreach (var item in listSourceEntity)
                    {
                        if (item.ID == Model.SourceID)
                        {
                            <option value="@(item.ID)" selected>@(item.SourceName)</option>
                        }
                        else
                        {
                            <option value="@(item.ID)">@(item.SourceName)</option>
                        }
                    }
                }
            </select>
        </div>
        <div class="col-md-3">
            <div class="vaild-feedback"></div>
        </div>
        <div class="col-md-3 text-end"><label class="col-md-10 col-form-label">数据库名称<span class="text-danger">*</span>：</label></div>
        <div class="col-md-6">
            <input type="text" class="form-control" id="databaseName" placeholder="数据库名称" name="DBName" value="@(Model.DataBaseName)" required />
        </div>
        <div class="col-md-3">
            <div class="vaild-feedback"></div>
        </div>
        <div class="col-md-3 text-end"><label class="col-md-10 col-form-label">登陆账号<span class="text-danger">*</span>：</label></div>
        <div class="col-md-6">
            <input type="text" class="form-control" id="databaseLoginName" placeholder="登陆账号" name="DBLoginName" value="@(Model.LoginName)" required />
        </div>
        <div class="col-md-3">
            <div class="vaild-feedback"></div>
        </div>
        <div class="col-md-3 text-end"><label class="col-md-10 col-form-label">登陆密码<span class="text-danger" id="requireTipPassword">*</span>：</label></div>
        <div class="col-md-6">
            <input type="password" class="form-control" id="databaseLoginPassword" placeholder="登陆密码" name="DBLoginPassword" value="" required />
        </div>
        <div class="col-md-3">
            <div class="vaild-feedback"></div>
        </div>
        <div class="col-md-3 text-end"><label class="col-md-10 col-form-label">数据库介绍：</label></div>
        <div class="col-md-6">
            <textarea class="form-control" id="databaseIntro" placeholder="输入简介" name="DBIntro" required>@Html.Raw(Model.DataBaseIntro)</textarea>
        </div>
        <div class="col-md-3 text-end">
            <div class="vaild-feedback"></div>
        </div>
        <div class="col-4">
        </div>
        <div class="col-4 d-grid">
            <input type="hidden" name="ID" id="hid_fsServiceID" value="@(Model.ID)" />
            <button class="btn btn-primary btn-sm" id="btnFormSubmit" type="submit">提 交</button>
        </div>
        <div class="col-4">
            <div class="testConnectionDiv d-flex flex-sm-row justify-content-center">
                @* <i id="successConn" title="连接成功" class="bi bi-check-circle success"></i>*@
                <button type="button" id="btn_TestConnection" onclick="testConnection()" class="btn btn-link p-0 mt-1">测试连接</button>
            </div>
        </div>
    </form>
</div>
@section scripts{
    <script type="text/javascript">
        //
        $(function () {
            //初始化表单提交
            var options = {
                beforeSubmit: formSubmitBefore, //提交前，验证
                success: formSubmitSuccess,  //提交成功后
                error: formSubmitError,
                //url:"",//form "action"已经配置了
                //"type":"post",//form "method"已经配置了
                //dataType:null,//'xml', 'script', or 'json'
                //clearForm: false,//提交成功后，清空表单
                //resetForm: false,//提交成功后，重置表单
                //timeout:   3000
            }
            $("#saveDBserviceForm").submit(function () {
                $(this).ajaxSubmit(options);
                return false;
            })
            var fsServiceID = $("#hid_fsServiceID").val();
            if (fsServiceID > 0) {
                $("#requireTipPassword").hide();
                var passwordEle = document.getElementById('databaseLoginPassword');
                var tooltip = new bootstrap.Tooltip(passwordEle, {
                    animation:true,
                    delay:0,
                    placement:'right',
                    title:'更新时，为空则不更新密码',
                    trigger:'hover focus',
                    fallbackPlacements:['right','top','bottom']
                })
            }
            // $("#saveDBserviceForm").ajaxSubmit(options);
        })

        /**
        * 提交前的方法
        * @@param {any} formData   form数据，数组
        * @@param {any} jqForm  form DOM元素，数组
        * @@param {any} options 配置项
        */
        function formSubmitBefore(formData, jqForm, options) {
            //var queryString = $.param(formData);
            //$(jqForm).addClass("was-validated");//bootstrap验证
            //alert('提交的参数: \n\n' + queryString);

            var isValid = validFormInput();
            if (isValid) {
                layer.msg('<div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden"></span></div>保存中...', { shade: 0.1, time: 999999 });
            }
            return isValid;//返回false，阻止form提交
        }
        /**
         * 验证表男内容
         */
        function validFormInput() {
            var hid_fsServiceID = $("#hid_fsServiceID").val();
            var databaseAddress = $.trim($("#databaseAddress").val());
            var databaseSource = $("#databaseSource").val();
            var databaseName = $.trim($("#databaseName").val());
            var databaseLoginName = $.trim($("#databaseLoginName").val());
            var databaseLoginPassword = $.trim($("#databaseLoginPassword").val());
            if (Valid.IsNullOrEmpty(databaseAddress)) {
                layer.msg("请填写数据库地址");
                $("#databaseAddress").focus();
                return false;
            }
            if (!Valid.NumberT1(databaseSource)) {
                layer.msg("请选择数据库来源");
                $("#databaseSource").focus(); return false;
            }
            if (Valid.IsNullOrEmpty(databaseName)) {
                layer.msg("请填写数据库名称");
                $("#databaseName").focus(); return false;
            }
            if (Valid.IsNullOrEmpty(databaseLoginName)) {
                layer.msg("请填写登录名");
                $("#databaseLoginName").focus(); return false;
            }
            if (hid_fsServiceID <= 0) {
                if (Valid.IsNullOrEmpty(databaseLoginPassword)) {
                    layer.msg("请填写登录密码");
                    $("#databaseLoginPassword").focus(); return false;
                }
            }
            return true;
        }
        /**
        * form提交成功后返回
        * @@param {any} responseText
        * @@param {any} statusText
        * @@param {any} xhr
        * @@param {any} $form
        */
        function formSubmitSuccess(responseText, statusText, xhr, $form) {
            layer.closeAll();
            if (statusText == "success") {
                if (responseText.entityCode == 1000) {
                    layer.msg("保存成功", { icon: 1, shade: 0.1 }, function () {
                        // layer.msg('提示框关闭后的回调');
                        window.parent.location.reload();
                    });
                } else {
                    layer.msg(responseText.message, { icon: 0, shade: 0.1 }, function () {
                    });
                }
            } else {
                console.log(responseText);
                layer.msg("系统异常", { icon: 2, shade: 0.1 }, function () {
                });
            }
        }
        /**
         * form submit error
         */
        function formSubmitError(x, s, h, f) {
            layer.closeAll();
            console.log(s);
            layer.msg("系统异常", { icon: 2, shade: 0.1 }, function () {
            });
        }

        /**
         * test connection
         */
        function testConnection() {
            var isValid = validFormInput();
            if (!isValid) return false;
            var databaseLoginPassword = $.trim($("#databaseLoginPassword").val());
            if (Valid.IsNullOrEmpty(databaseLoginPassword)) {
                layer.msg("请填写登录密码");
                $("#databaseLoginPassword").focus(); return false;
            }
            var layorIndex = layer.msg('<div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden"></span></div>连接测试中...', { shade: 0.1, time: 999999 });
            $.ajax(
                {
                    url: '/DataBase/TestConnection/',
                    type: 'get',
                    data: $('#saveDBserviceForm').formSerialize(),
                    dataType: "text",
                    success: function (data) {
                        if (data == "true") {
                            layer.msg("连接成功");
                        } else {
                            layer.msg("连接失败");
                        }
                    },
                    error: function (s, x) {
                        layer.msg("请求异常");
                        console.log(s);
                    },
                    complate: function (s, x) {
                        layer.close(layorIndex);
                        console.log(s);
                    }
                })
        }

    </script>
}
